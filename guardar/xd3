//import db from '../lib/database.js'

import { createHash } from 'crypto'
let Reg = /\|?(.)([.|] *?)([0-9])$/i
let handler = async function (m, { conn, text, usedPrefix, command }) {
  let user = global.db.data.users[m.sender]
  let name2 = conn.getName(m.sender)
  if (user.registered === true) throw ` Ya est��s registrado\n\n?Quiere volver a registrarse?\n\n ? Use este comando para eliminar su registro \n*${usedPrefix}unreg* <N��mero de serie>`
  if (!Reg.test(text)) throw ? Formato incorrecto\n\n ? Uso del comamdo: *${usedPrefix + command} nombre.edad*\n?Ejemplo : *${usedPrefix + command}* ${name2}.16
  let [_, name, splitter, age] = text.match(Reg)
  if (!name) throw '?? El nombre no puede estar vac��o'
  if (!age) throw '?? La edad no puede estar vac��a'
  if (name.length >= 30) throw '??  El nombre es demasiado largo' 
  age = parseInt(age)
  if (age > 100) throw '? Wow el abuelo quiere jugar al bot'
  if (age < 5) throw '?  hay un abuelo beb�� jsjsj '
  user.name = name.trim()
  user.age = age
  user.regTime = + new Date
  user.registered = true
  let sn = createHash('md5').update(m.sender).digest('hex')
  let str = `�� Registro �� '
  
    .?????Nombre : ${name}
    .?????Edad : ${age} a?os
    .????? Numero de serie :
     ?????${sn}
  

 ${usedPrefix}menu para ver el Menu`
conn.sendMessage(
    m.chat,
    {
      image: {
        url: "https://telegra.ph/file/3c62114e245e8665dcfa0.jpg",
      },
      caption: str,
      contextInfo: {
        mentionedJid: [m.sender],
        externalAdReply: {
          title: gcname,
          sourceUrl: global.linkgc,
          mediaType: 1,
          showAdAttribution: true,
          thumbnailUrl: "https://telegra.ph/file/bdbc656eb92fce64ae4db.png",
        },
      },
    },
    {
      quoted: m,
    }
  );
}
handler.help = ['reg'].map(v => v + ' <nombre.edad>')
handler.tags = ['rg']

handler.command = ['verify', 'reg', 'register', 'registrar'] 

export default handler
